@using Workflow.Domain.Extensions
@model RolePermissionsViewModel
@using Workflow.UI.Helpers
@{
    Layout = "_ListLayout";
    ViewBag.Title = "Liste des rôles";
    ViewBag.Breadcrumb = "Rôles";
    ViewBag.ButtonLabel = "Nouveau rôle";
    ViewBag.controller = "Role";
}

@section Table {
    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success">@TempData["Success"]</div>
    }
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger">@TempData["Error"]</div>
    }

    <table class="table table-bordered table-hover table-sm">
        <thead>
            <tr>
                <th rowspan="2"></th>
                @foreach (var group in Model.GroupedPermissions)
                {
                    <th colspan="@group.Value.Count" class="text-center">@group.Key</th>
                }
            </tr>
            <tr>
                @foreach (var group in Model.GroupedPermissions)
                {
                    foreach (var perm in group.Value)
                    {
                        <th class="text-center">@perm.Split('.')[2]</th>
                    }
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var role in Model.Matrix)
            {
                <tr>
                    <td class="d-flex justify-content-between align-items-center">
                        @role.Key
                        @if (role.Key != "SuperAdmin")
                        {
                            <form asp-action="Delete" asp-controller="Role" method="post" class="m-0" onsubmit="return confirm('Supprimer le rôle @role.Key ?');">
                                <input type="hidden" name="roleName" value="@role.Key" />
                                <button type="submit" class="btn btn-sm btn-danger py-0 px-2"><i class="bi bi-x-lg"></i></button>
                            </form>
                        }
                    </td>
                    @foreach (var group in Model.GroupedPermissions)
                    {
                        foreach (var perm in group.Value)
                        {
                            var isChecked = role.Value.ContainsKey(perm) && role.Value[perm];

                            <td align="center">
                                <form asp-action="UpdatePermission" asp-controller="Role" method="post" id="form-@role.Key-@perm">
                                    <input type="hidden" name="roleName" value="@role.Key" />
                                    <input type="hidden" name="permission" value="@perm" />
                                    <input type="hidden" name="value" value="@(isChecked ? "false" : "true")" />
                                    <input type="checkbox"
                                           @(isChecked ? "checked" : "")
                                           onchange="document.getElementById('form-@role.Key-@perm').submit();" />
                                </form>
                            </td>
                        }
                    }

                </tr>
            }
        </tbody>
    </table>
}